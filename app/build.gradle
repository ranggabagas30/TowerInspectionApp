buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        mavenCentral()
    }

    dependencies {
        classpath "io.fabric.tools:gradle:${rootProject.ext.fabricGradleVersion}"
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

// Manifest version information!
def minAPIlevel  = rootProject.ext.minSdkVersion
def versionMajor = 2
def versionMinor = 6
def versionPatch = 2

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.sap.inspection"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode minAPIlevel * 1000000 + versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        setProperty("archivesBaseName", "sap" + "-v" + "(" + versionName + ")")
    }

    signingConfigs {
        release {
            storeFile file('release.keystore.jks')
            storePassword "domikado"
            keyAlias "saptower"
            keyPassword "saptower"
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            applicationVariants.all { variant ->
                renameAPK(variant)
            }
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                renameAPK(variant)
            }
        }
    }

    flavorDimensions "default"

    productFlavors {
        sap {
            applicationId 'com.sap.inspection'
            dimension "default"
            buildConfigField("int", "DBMANAGERVALUE_SCHEMA_VERSION", "9")
            buildConfigField("int", "DBMANAGER_SCHEMA_VERSION", "11")
            buildConfigField("String", "FOLDER_CAMERA", '"Camera"')
            buildConfigField("String", "FOLDER_TOWER_INSPECTION", '".TowerInspection"')
        }
        stp {
            applicationId 'com.stp.inspection'
            dimension "default"
            versionMajor = 2
            versionMinor = 5
            versionPatch = 10
            versionCode minAPIlevel * 1000000 + versionMajor * 10000 + versionMinor * 100 + versionPatch
            versionName "${versionMajor}.${versionMinor}.${versionPatch}"
            buildConfigField("int", "DBMANAGERVALUE_SCHEMA_VERSION", "8")
            buildConfigField("int", "DBMANAGER_SCHEMA_VERSION", "9")
            buildConfigField("String", "FOLDER_CAMERA", '"Camera"')
            buildConfigField("String", "FOLDER_TOWER_INSPECTION", '"TowerInspection"')
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

def renameAPK(variant) {
    variant.outputs.all { output ->
        def formattedDate = new Date().format('ddMMYY')
        outputFileName = "${variant.name}-${variant.versionName}-${formattedDate}.apk"
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':baseassets')
    implementation "com.google.android.gms:play-services-location:${rootProject.ext.playServicesLocationVersion}"
    implementation "com.google.android.gms:play-services-maps:${rootProject.ext.playServicesMapsVersion}"
    implementation "com.google.firebase:firebase-core:${rootProject.ext.firebaseCoreVersion}"
    implementation "com.google.firebase:firebase-messaging:${rootProject.ext.firebaseMessagingVersion}"
    implementation "com.crashlytics.sdk.android:crashlytics:${rootProject.ext.crashlyticsVersion}"
    implementation "com.facebook.stetho:stetho:${rootProject.ext.facebookStethoversion}"
    implementation("com.google.code.gson:gson:2.3") {
        exclude module: 'gson:2.2.4'
    }

    // For developers using the Android Support Library
    implementation "pub.devrel:easypermissions:${rootProject.ext.easyPermissionVersion}"

    // AES encryption lib
    implementation "com.scottyab:aescrypt:${rootProject.ext.aesEncryptionVersion}"

    // Apache commons
    implementation group: 'commons-io', name: 'commons-io', version: "${rootProject.ext.apacheCommonsIoVersion}"
    implementation "commons-codec:commons-codec:${rootProject.ext.apacheCommonsCodecVersion}"

    implementation "com.android.support.constraint:constraint-layout:${rootProject.ext.constraintLayoutVersion}"
    debugImplementation "com.amitshekhar.android:debug-db:${rootProject.ext.androidDebug}"

    // Networking
    // Retrofit http://square.github.io/retrofit
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0' // interceptor
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'  // // retrofit2 rxjava2 adapter

    // reactive
    // https://github.com/ReactiveX/RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1' // rxAndroid 2.0 to subscribe on AndroidSchedulers class
    implementation 'io.reactivex.rxjava2:rxjava:2.2.10' // rxJava2

}

apply plugin: 'com.google.gms.google-services'
